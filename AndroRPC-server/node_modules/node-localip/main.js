/*jshint node:true*/

/*
 # St√•le Raknes, 2015
 # @starak666
 */
"use strict";
var interfaces = require( "os" ).networkInterfaces();
var wmic = require( 'wmic' ); // Windows
var exec = require( 'child_process' ).exec;

// Mac/Linux
var xnix = function ( cmd ) {
    return function ( cb ) {
        exec( cmd, function ( err, stdout ) {
            if ( err ) {
                return cb( err );
            }
            var raw = stdout.toString().trim().split( '\n' );
            if ( raw.length === 0 ) {
                return cb( new Error( 'No active network interface found.' ) );
            }
            cb( null, raw[0] );
        } );
    };
};

//noinspection JSUnusedGlobalSymbols
var platform = {
    darwin: xnix( "netstat -rn | grep UG | awk '{print $6}'" ),
    linux: xnix( "netstat -rn | grep UG | awk '{print $NF}'" ),
    win32: function ( cb ) { //
        wmic.get_value( 'nic', 'NetConnectionID', 'NetConnectionStatus = 2', cb );
    }
};

var cos = platform[process.platform];

function getLocalIp( cb ) {

    cos( function ( err, prefered ) {

        if(err){

            cb( err );

        }

        if( interfaces[ prefered ] ){

            interfaces[prefered].map( function mapInterface( intface ) {

                if ( intface.family === "IPv4" && !intface.internal ) {

                    cb( null, intface.address.white );

                }
            } );

        }else {

            return cb( "No active network interface found." );

        }
    } );
}

module.exports = getLocalIp;
